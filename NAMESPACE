# Generated by roxygen2: do not edit by hand

S3method(as.data.frame,nodes.goldfish)
S3method(as.matrix,network.goldfish)
S3method(check_events,network.goldfish)
S3method(check_events,nodes.goldfish)
S3method(coef,result.goldfish)
S3method(glance,result.goldfish)
S3method(init_DyNAM_choice,alter)
S3method(init_DyNAM_choice,common_receiver)
S3method(init_DyNAM_choice,common_sender)
S3method(init_DyNAM_choice,cycle)
S3method(init_DyNAM_choice,default)
S3method(init_DyNAM_choice,diff)
S3method(init_DyNAM_choice,ego_alter_interaction)
S3method(init_DyNAM_choice,four)
S3method(init_DyNAM_choice,indeg)
S3method(init_DyNAM_choice,inertia)
S3method(init_DyNAM_choice,mixed_common_receiver)
S3method(init_DyNAM_choice,mixed_common_sender)
S3method(init_DyNAM_choice,mixed_cycle)
S3method(init_DyNAM_choice,mixed_trans)
S3method(init_DyNAM_choice,node_trans)
S3method(init_DyNAM_choice,outdeg)
S3method(init_DyNAM_choice,recip)
S3method(init_DyNAM_choice,same)
S3method(init_DyNAM_choice,sim)
S3method(init_DyNAM_choice,tertius)
S3method(init_DyNAM_choice,tertius_diff)
S3method(init_DyNAM_choice,tie)
S3method(init_DyNAM_choice,trans)
S3method(init_DyNAM_rate,default)
S3method(init_DyNAM_rate,ego)
S3method(init_DyNAM_rate,indeg)
S3method(init_DyNAM_rate,node_trans)
S3method(init_DyNAM_rate,outdeg)
S3method(init_DyNAM_rate,tertius)
S3method(init_DyNAMi_choice,default)
S3method(init_DyNAMi_rate,default)
S3method(init_REM_choice,alter)
S3method(init_REM_choice,common_receiver)
S3method(init_REM_choice,common_sender)
S3method(init_REM_choice,cycle)
S3method(init_REM_choice,default)
S3method(init_REM_choice,diff)
S3method(init_REM_choice,ego)
S3method(init_REM_choice,ego_alter_interaction)
S3method(init_REM_choice,four)
S3method(init_REM_choice,indeg)
S3method(init_REM_choice,inertia)
S3method(init_REM_choice,mixed_common_receiver)
S3method(init_REM_choice,mixed_common_sender)
S3method(init_REM_choice,mixed_cycle)
S3method(init_REM_choice,mixed_trans)
S3method(init_REM_choice,node_trans)
S3method(init_REM_choice,outdeg)
S3method(init_REM_choice,recip)
S3method(init_REM_choice,same)
S3method(init_REM_choice,sim)
S3method(init_REM_choice,tertius)
S3method(init_REM_choice,tertius_diff)
S3method(init_REM_choice,tie)
S3method(init_REM_choice,trans)
S3method(link_events,default)
S3method(link_events,network.goldfish)
S3method(link_events,nodes.goldfish)
S3method(logLik,result.goldfish)
S3method(print,data.goldfish)
S3method(print,dependent.goldfish)
S3method(print,estimation_opt.goldfish)
S3method(print,network.goldfish)
S3method(print,nodes.goldfish)
S3method(print,preprocessed.goldfish)
S3method(print,preprocessing_opt.goldfish)
S3method(print,result.goldfish)
S3method(print,summary.result.goldfish)
S3method(summary,result.goldfish)
S3method(tidy,result.goldfish)
S3method(vcov,result.goldfish)
export(commonReceiver)
export(commonSender)
export(defineDependentEvents)
export(defineGlobalAttribute)
export(defineGroups_interaction)
export(defineNetwork)
export(defineNodes)
export(egoAlterInt)
export(estimate_dynam)
export(estimate_dynami)
export(estimate_rem)
export(examineChangepoints)
export(examineOutliers)
export(examine_changepoints)
export(examine_outliers)
export(gather_model_data)
export(glance)
export(linkEvents)
export(link_events)
export(make_data)
export(make_data_goldfish)
export(make_dependent_events)
export(make_dependent_events_goldfish)
export(make_global_attribute)
export(make_global_attribute_goldfish)
export(make_groups_interaction)
export(make_network)
export(make_network_goldfish)
export(make_nodes)
export(make_nodes_goldfish)
export(mixedCommonReceiver)
export(mixedCommonSender)
export(mixedCycle)
export(mixedTrans)
export(nodeTrans)
export(set_estimation_opt)
export(set_preprocessing_opt)
export(tertiusDiff)
export(tidy)
importFrom(Rcpp,sourceCpp)
importFrom(generics,glance)
importFrom(generics,tidy)
importFrom(lifecycle,deprecated)
importFrom(rlang,.data)
importFrom(stats,IQR)
importFrom(stats,as.formula)
importFrom(stats,coef)
importFrom(stats,formula)
importFrom(stats,median)
importFrom(stats,na.exclude)
importFrom(stats,na.omit)
importFrom(stats,sd)
importFrom(utils,head)
importFrom(utils,packageDescription)
importFrom(utils,packageVersion)
useDynLib(goldfish)
