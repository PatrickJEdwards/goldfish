% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions_gather.R
\name{GatherPreprocessing}
\alias{GatherPreprocessing}
\title{Gather preprocess data from a formula}
\usage{
GatherPreprocessing(
  formula,
  model = c("DyNAM", "REM"),
  subModel = c("choice", "choice_coordination", "rate"),
  preprocessArgs = NULL,
  progress = getOption("progress"),
  envir = new.env()
)
}
\arguments{
\item{formula}{See \code{\link[=estimate]{estimate()}}. Left side a dependent events object defined
with \code{\link[=defineDependentEvents]{defineDependentEvents()}} and right side effect parameters as described
in \code{vignette("goldfishEffects")}.}

\item{model}{See \code{\link[=estimate]{estimate()}}.  Current version of gather works for
\code{c('DyNAM')}}

\item{subModel}{Current version supports \code{c('choice_coordination', 'choice')}}

\item{preprocessArgs}{Additional preprocess arguments like \code{startTime},
\code{endTime} and \code{opportunitiesList}. See \code{\link[=estimate]{estimate()}}.}

\item{progress}{Default \code{FALSE}.}

\item{envir}{an \code{environment} where \code{formula} objects and their linked
objectsare available.}
}
\value{
a list with the data and relevant information.
}
\description{
Preprocess is made with goldfish.
}
\examples{
data("Fisheries_Treaties_6070")
states <- defineNodes(states)
states <- linkEvents(states, sovchanges, attribute = "present")
states <- linkEvents(states, regchanges, attribute = "regime")
states <- linkEvents(states, gdpchanges, attribute = "gdp")

bilatnet <- defineNetwork(bilatnet, nodes = states, directed = FALSE)
bilatnet <- linkEvents(bilatnet, bilatchanges, nodes = states)

createBilat <- defineDependentEvents(
  events = bilatchanges[bilatchanges$increment == 1, ],
  nodes = states, defaultNetwork = bilatnet
)

contignet <- defineNetwork(contignet, nodes = states, directed = FALSE)
contignet <- linkEvents(contignet, contigchanges, nodes = states)

gatheredData <- GatherPreprocessing(
  createBilat ~ inertia(bilatnet) + trans(bilatnet) + tie(contignet)
)

}
